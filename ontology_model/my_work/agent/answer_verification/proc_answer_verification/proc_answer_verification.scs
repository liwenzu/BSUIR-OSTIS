scp_program -> proc_answer_verification (* 
   -> rrel_params: .proc_answer_verification_params (*  
            -> rrel_1: rrel_in: _avparameterst;;
            -> rrel_2: rrel_in: _avanswerst;;  
            *);;
   -> rrel_operators: .proc_answer_verification_set (*
            -> rrel_init: .proc_answer_verification_operator0 (* 
                     <- printNl;;
                     -> rrel_1: rrel_fixed: rrel_scp_const: [答案验证函数];;
                     => nrel_goto: .proc_answer_verification_operator0_1;;
                     *);;
//随便生成一个具体的问题点
            -> .proc_answer_verification_operator0_1 (* 
			       <- genEl;;
			       -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _caquest;;
                     => nrel_goto: .proc_answer_verification_operator1;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//代理调用程序
            -> .proc_answer_verification_operator1 (* 
			       <- genElStr3;;
			       -> rrel_1: rrel_fixed: rrel_scp_var: _caquest;;
			       -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			       -> rrel_3: rrel_fixed: rrel_scp_var: _avparameterst;;
                     => nrel_goto: .proc_answer_verification_operator1_1;;
                     *);;
            -> .proc_answer_verification_operator1_1 (* 
			       <- genElStr3;;
			       -> rrel_1: rrel_fixed: rrel_scp_const: logical_kn_similarity_calculation;;
			       -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			       -> rrel_3: rrel_fixed: rrel_scp_var: _caquest;;
                     => nrel_goto: .proc_answer_verification_operator1_2;;
                     *);;
            -> .proc_answer_verification_operator1_2 (* 
			       <- genElStr3;;
			       -> rrel_1: rrel_fixed: rrel_scp_const: question_initiated;;
			       -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_init;;
			       -> rrel_3: rrel_fixed: rrel_scp_var: _caquest;;
                     => nrel_goto: .proc_answer_verification_operator1_3;;
                     *);;
            -> .proc_answer_verification_operator1_3 (* 
	                 <- searchElStr3;;
			       -> rrel_1: rrel_fixed: rrel_scp_const: question_finished_unsuccessfully;;
			       -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_result;;
			       -> rrel_3: rrel_fixed: rrel_scp_var: _caquest;;
                     => nrel_then: .proc_answer_verification_operator1_7;;
                     => nrel_else: .proc_answer_verification_operator1_4;;
                     *);;
            -> .proc_answer_verification_operator1_4 (* 
			       <- searchElStr3;;
			       -> rrel_1: rrel_fixed: rrel_scp_const: question_finished_successfully;;
			       -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_result;;
			       -> rrel_3: rrel_fixed: rrel_scp_var: _caquest;;
                     => nrel_then: .proc_answer_verification_operator1_6;;
                     => nrel_else: .proc_answer_verification_operator1_5;;
                     *);;
            -> .proc_answer_verification_operator1_5 (* 
			       <- sys_wait;;
			       -> rrel_1: rrel_fixed: rrel_scp_const: sc_event_remove_input_arc;;
			       -> rrel_2: rrel_fixed: rrel_scp_var: _caquest;;
                     => nrel_goto: .proc_answer_verification_operator1_3;;
                     *);;





            -> .proc_answer_verification_operator1_6 (* 
                     <- printEl;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _avparameterst;;
                     => nrel_goto: .proc_answer_verification_operator1_7;;
                     *);;
            -> .proc_answer_verification_operator1_7 (* 
		            <- eraseEl;;
			       -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc_init;;
                     => nrel_goto: .proc_answer_verification_operator1_8;;
                     *);;
            -> .proc_answer_verification_operator1_8 (* 
		            <- eraseEl;;
			       -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc_result;;
                     => nrel_goto: .proc_answer_verification_operator_return;;
                     *);;




            -> .proc_answer_verification_operator1_10 (* 
		            <- eraseEl;;
			       -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc_init;;
                     => nrel_goto: .proc_answer_verification_operator1_11;;
                     *);;
            -> .proc_answer_verification_operator1_11 (* 
                     <- printEl;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _avparameterst;;
                     => nrel_goto: .proc_answer_verification_operator_return;;
                     *);;





//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
            -> .proc_answer_verification_operator_return (* 
                     <- return;;
                     *);;                                                 
      *);;  
*);;
