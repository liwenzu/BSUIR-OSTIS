scp_program -> proc_lo_kn_similarity_calculation (* 
   -> rrel_params: .proc_lo_kn_similarity_calculation_params (*  
            -> rrel_1: rrel_in: _parameter;;
            -> rrel_2: rrel_in: _answer;;  
            *);;
//生成几个节点用于存放顺序链接sheaf和结构节点
   -> rrel_operators: .proc_lo_kn_similarity_calculation_set (*
       -> rrel_init: .proc_lo_kn_similarity_calculation_operator0 (* 
              <- printNl;;
              -> rrel_1: rrel_fixed: rrel_scp_const: [逻辑知识相似度计算主函数];;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_0;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator0_0 (* 
              <- genEl;;
              -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _elem_nbtups1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_1;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator0_1 (* 
              <- genEl;;
              -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _elem_nbtups2;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_2;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator0_2 (* 
              <- genEl;;
              -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _elem_strus1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_3;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator0_3 (* 
              <- genEl;;
              -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _elem_strus2;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_4a;;
              *);;
//生成一个节点用于存储变量之间的映射关系
       -> .proc_lo_kn_similarity_calculation_operator0_4a (* 
              <- genEl;;
              -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _elem_map;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_4d;;
              *);;
//生成两个节点用于存放定义域弧
       -> .proc_lo_kn_similarity_calculation_operator0_4d (* 
              <- genEl;;
              -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _elemdedoarc1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_4e;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator0_4e (* 
              <- genEl;;
              -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _elemdedoarc2;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_4f;;
              *);;
//生成两个节点用户存放用户答案中匹配和不匹配的子结构
       -> .proc_lo_kn_similarity_calculation_operator0_4f (* 
              <- genEl;;
              -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _mathstru;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_4g;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator0_4g (* 
              <- genEl;;
              -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _mismathstru;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_4m;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断有其他可能的答案吗
       -> .proc_lo_kn_similarity_calculation_operator0_4m (*
              <- searchSetStr5;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _parameter;;
              -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
              -> rrel_3: rrel_assign: rrel_scp_var: _arc;;
              -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
              -> rrel_5: rrel_fixed: rrel_scp_const: nrel_possible_answer;;
              -> rrel_set_3: rrel_assign: rrel_scp_var: _elems_1p;;
              => nrel_then: .proc_lo_kn_similarity_calculation_operator0_4m1;;
              => nrel_else: .proc_lo_kn_similarity_calculation_operator0_4;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator0_4m1 (*
              <- searchElStr5;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _parameter;;
              -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
              -> rrel_3: rrel_assign: rrel_scp_var: _elemuser;;
              -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
              -> rrel_5: rrel_fixed: rrel_scp_const: nrel_user_answer;;
              => nrel_then: .proc_lo_kn_similarity_calculation_operator0_4m2;;
              => nrel_else: .proc_lo_kn_similarity_calculation_operator4_8;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator0_4m2 (*
              <- searchElStr5;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _elemuser;;
              -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
              -> rrel_3: rrel_assign: rrel_scp_var: _arc;;
              -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
              -> rrel_5: rrel_fixed: rrel_scp_const: nrel_key_sc_element;;
              => nrel_then: .proc_lo_kn_similarity_calculation_operator0_4;;
              => nrel_else: .proc_lo_kn_similarity_calculation_operator0_4m3;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator0_4m3 (*
              <- searchSetStr5;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _parameter;;
              -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
              -> rrel_3: rrel_assign: rrel_scp_var: _arc;;
              -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
              -> rrel_5: rrel_fixed: rrel_scp_const: nrel_correct_answer;;
              -> rrel_set_3: rrel_fixed: rrel_scp_var: _elems_1p;;
              => nrel_then: .proc_lo_kn_similarity_calculation_operator0_4m4;;
              => nrel_else: .proc_lo_kn_similarity_calculation_operator4_8;;
              *);;
       ->.proc_lo_kn_similarity_calculation_operator0_4m4 (* 
              <- call;;
              -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_possible_answer_judgment;;
              -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elems_1p;;
                     -> rrel_2: rrel_fixed: rrel_scp_const: nrel_user_answer;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _parameter;;  
                     *);;
              -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_4m5;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator0_4m5 (*
              <- waitReturn;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_4;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//调用逻辑语义图数据预处理函数
//先处理标准答案，自动标号
       ->.proc_lo_kn_similarity_calculation_operator0_4 (* 
              <- call;;
              -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_preprocessing_of_aut_num;;
              -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
                     -> rrel_1: rrel_fixed: rrel_scp_var: _parameter;;
                     -> rrel_2: rrel_fixed: rrel_scp_const: nrel_correct_answer;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elem_nbtups1;;
                     -> rrel_4: rrel_fixed: rrel_scp_var: _elem_strus1;;
                     -> rrel_5: rrel_assign: rrel_scp_var: _elems_1;;
                     *);;
              -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_5;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator0_5 (*
              <- waitReturn;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_6;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//调用逻辑语义图数据预处理函数
//处理用户答案，自动标号
       ->.proc_lo_kn_similarity_calculation_operator0_6 (* 
              <- call;;
              -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_preprocessing_of_aut_num;;
              -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
                     -> rrel_1: rrel_fixed: rrel_scp_var: _parameter;;
                     -> rrel_2: rrel_fixed: rrel_scp_const: nrel_user_answer;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elem_nbtups2;;
                     -> rrel_4: rrel_fixed: rrel_scp_var: _elem_strus2;;
                     -> rrel_5: rrel_assign: rrel_scp_var: _elems_2;;
                     *);;
              -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator0_7;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator0_7 (*
              <- waitReturn;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//调用结构分解的函数
       -> .proc_lo_kn_similarity_calculation_operator1 (* 
              <- call;;
              -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_gen_substr;;
              -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
                     -> rrel_1: rrel_fixed: rrel_scp_var: _parameter;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _answer;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: nrel_correct_answer;;
                     -> rrel_4: rrel_assign: rrel_scp_var: _elem1;;
                     *);;
              -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_1;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator1_1 (*
              <- waitReturn;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_2;;
              *);;
//调用子结构分解和生成对应的子结构
       -> .proc_lo_kn_similarity_calculation_operator1_2 (* 
              <- call;;
              -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_gen_substr;;
              -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
                     -> rrel_1: rrel_fixed: rrel_scp_var: _parameter;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _answer;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: nrel_user_answer;;
                     -> rrel_4: rrel_assign: rrel_scp_var: _elem2;;
                     *);;
              -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_3;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator1_3 (*
              <- waitReturn;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_4a1;;
//            => nrel_goto: .proc_lo_kn_similarity_calculation_return;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//定义域关系的建立(标准答案)
       -> .proc_lo_kn_similarity_calculation_operator1_4a1 (* 
              <- call;;
              -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_deter_domain_of_definition;;
              -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elems_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _elemdedoarc1;;
                     *);;
              -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_4a2;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator1_4a2 (*
              <- waitReturn;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_4a3;;
              *);;
//定义域关系的建立(用户答案)
       -> .proc_lo_kn_similarity_calculation_operator1_4a3 (* 
              <- call;;
              -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_deter_domain_of_definition;;
              -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elems_2;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _elemdedoarc2;;
                     *);;
              -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_4a4;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator1_4a4 (*
              <- waitReturn;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_4b1;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//建立映射函数部分
       -> .proc_lo_kn_similarity_calculation_operator1_4b1 (* 
              <- call;;
              -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_mapping_preprocessing;;
              -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elems_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _elems_2;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elem1;;
                     -> rrel_4: rrel_fixed: rrel_scp_var: _elem2;;
                     -> rrel_5: rrel_fixed: rrel_scp_var: _elem_map;;
                     -> rrel_6: rrel_fixed: rrel_scp_var: _elem_strus1;;
                     -> rrel_7: rrel_fixed: rrel_scp_var: _elem_strus2;;
//                   -> rrel_8: rrel_fixed: rrel_scp_var: _elemsvararc1;;
//                   -> rrel_9: rrel_fixed: rrel_scp_var: _elemsvararc2;;
//                   -> rrel_8: rrel_fixed: rrel_scp_var: _elem_nbtups1;;
//                   -> rrel_9: rrel_fixed: rrel_scp_var: _elem_nbtups2;;
                     *);;
              -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_4b2;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator1_4b2 (*
              <- waitReturn;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_4;;
//	       => nrel_goto: .proc_lo_kn_similarity_calculation_return;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//调用子结构相同个数计算函数
       -> .proc_lo_kn_similarity_calculation_operator1_4 (* 
              <- call;;
              -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_calc_number_of_substr;;
              -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _elem2;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elem_nbtups1;;
                     -> rrel_4: rrel_fixed: rrel_scp_var: _elem_nbtups2;;
                     -> rrel_5: rrel_fixed: rrel_scp_var: _elem_strus1;;
                     -> rrel_6: rrel_fixed: rrel_scp_var: _elem_strus2;;
                     -> rrel_7: rrel_assign: rrel_scp_var: _summa;;
                     -> rrel_8: rrel_assign: rrel_scp_var: _sumsta;;
                     -> rrel_9: rrel_assign: rrel_scp_var: _sumcand;;
                     -> rrel_10: rrel_fixed: rrel_scp_var: _mathstru;;
                     *);;
              -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_5;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator1_5 (*
              <- waitReturn;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_6;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
       -> .proc_lo_kn_similarity_calculation_operator1_6 (*
              <- printNl;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _sumsta;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_7;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator1_7 (*
              <- printNl;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _sumcand;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_8;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator1_8 (*
              <- printNl;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _summa;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_9;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//召回率，精确度，相似度计算
       -> .proc_lo_kn_similarity_calculation_operator1_9 (* 
              <- call;;
              -> rrel_1: rrel_fixed: rrel_scp_const: proc_fa_kn_calculate_prf_sim;;
              -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
                     -> rrel_1: rrel_fixed: rrel_scp_var: _summa;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _sumcand;;
                     -> rrel_4: rrel_assign: rrel_scp_var: _Psc;;
                     -> rrel_5: rrel_assign: rrel_scp_var: _Rsc;;
                     -> rrel_6: rrel_assign: rrel_scp_var: _Fsc;;
                     *);;
              -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_10;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator1_10 (*
              <- waitReturn;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_11;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator1_11 (*
              <- printNl;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _Psc;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_12;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator1_12 (*
              <- printNl;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _Rsc;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator1_13;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator1_13 (*
              <- printNl;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _Fsc;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator2;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//生成一个在窗口显示相似度的节点
       -> .proc_lo_kn_similarity_calculation_operator2 (*
              <- genElStr5;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _parameter;;
              -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
              -> rrel_3: rrel_fixed: rrel_scp_var: _Fsc;;
              -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
              -> rrel_5: rrel_fixed: rrel_scp_const: nrel_coefficient;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator2_1;;
              *);;                                                              
       -> .proc_lo_kn_similarity_calculation_operator2_1 (*
              <- genElStr3;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
              -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc3;;
              -> rrel_3: rrel_fixed: rrel_scp_var: _arc;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator2_2;;
              *);; 
       -> .proc_lo_kn_similarity_calculation_operator2_2 (*
              <- genElStr3;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
              -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc3;;
              -> rrel_3: rrel_fixed: rrel_scp_var: _Fsc;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator2_3;;
              *);; 
       -> .proc_lo_kn_similarity_calculation_operator2_3 (*
              <- genElStr3;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
              -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc3;;
              -> rrel_3: rrel_fixed: rrel_scp_var: _arc1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator2_4;;
              *);; 
       -> .proc_lo_kn_similarity_calculation_operator2_4 (*
              <- genElStr3;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
              -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc3;;
              -> rrel_3: rrel_fixed: rrel_scp_const: nrel_coefficient;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator3;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//处理用户答案中匹配的结构和不匹配的结构的函数
       -> .proc_lo_kn_similarity_calculation_operator3 (* 
              <- call;;
              -> rrel_1: rrel_fixed: rrel_scp_const:  proc_lo_kn_preprocessing_of_mat_stru;;
              -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem2;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _mathstru;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _mismathstru;;
                     -> rrel_4: rrel_fixed: rrel_scp_var: _answer;;
                     -> rrel_5: rrel_fixed: rrel_scp_var: _parameter;;
                     *);;
              -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator3_1;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator3_1 (*
              <- waitReturn;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//删除一些创建的节点和弧
//首先删除链接节点的编号
       -> .proc_lo_kn_similarity_calculation_operator4 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elem_nbtups1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_1;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_1 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elem_nbtups2;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_2;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_2 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elem_strus1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_3;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_3 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elem_strus2;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_6;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_6 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _mathstru;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_8;;
              *);;
//开始删除定义域弧
//标准答案
       -> .proc_lo_kn_similarity_calculation_operator4_8 (*
              <- searchElStr3;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _elemdedoarc1;;  
              -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
              -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
              => nrel_then: .proc_lo_kn_similarity_calculation_operator4_9;;
              => nrel_else: .proc_lo_kn_similarity_calculation_operator4_11;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_9 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_10;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_10 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elem;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_8;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_11 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elemdedoarc1;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_12;;
              *);;
//用户答案
       -> .proc_lo_kn_similarity_calculation_operator4_12 (*
              <- searchElStr3;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _elemdedoarc2;;  
              -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
              -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
              => nrel_then: .proc_lo_kn_similarity_calculation_operator4_13;;
              => nrel_else: .proc_lo_kn_similarity_calculation_operator4_15;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_13 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_14;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_14 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elem;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_12;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_15 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elemdedoarc2;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_16;;
              *);;
//开始删除映射关系弧
       -> .proc_lo_kn_similarity_calculation_operator4_16 (*
              <- searchElStr3;;
              -> rrel_1: rrel_fixed: rrel_scp_var: _elem_map;;  
              -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
              -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
              => nrel_then: .proc_lo_kn_similarity_calculation_operator4_17;;
              => nrel_else: .proc_lo_kn_similarity_calculation_operator4_19;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_17 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_18;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_18 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elem;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_operator4_16;;
              *);;
       -> .proc_lo_kn_similarity_calculation_operator4_19 (*
              <- eraseEl;;
              -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elem_map;;
              => nrel_goto: .proc_lo_kn_similarity_calculation_return;;
              *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
       -> .proc_lo_kn_similarity_calculation_return (* 
              <- return;;
              *);;                                                 
      *);;  
*);;
