scp_program -> proc_lo_kn_calc_number_of_substr
(*
	-> rrel_params: ...
	(*
		-> rrel_1: rrel_in: _elem1cp;; 
		-> rrel_2: rrel_in: _elem2cp;;
		-> rrel_3: rrel_in: _elem_nbtups1me;;
		-> rrel_4: rrel_in: _elem_nbtups2me;;
		-> rrel_5: rrel_in: _elem_strus1me;;
		-> rrel_6: rrel_in: _elem_strus2me;;
//          -> rrel_3: rrel_out: _summa;;
//          -> rrel_4: rrel_out: _sumsta;;
//          -> rrel_5: rrel_out: _sumcand;;
	*);;
	-> rrel_operators: ... 
	(*
       -> rrel_init: .proc_lo_kn_calc_number_of_substr_operator0 (* 
                     <- printNl;;
                     -> rrel_1: rrel_fixed: rrel_scp_const: [子结构匹配函数!];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator0_1;;                                                        
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//生成一些节点用于存储不同类型的结构
		-> .proc_lo_kn_calc_number_of_substr_operator0_1 (*
               <- genEl;;
               -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classgene1;; //最后需要删除这几个点
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator0_2;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator0_2 (*
               <- genEl;;
               -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classgene2;; //最后需要删除这几个点
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator0_3;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator0_3 (*
               <- genEl;;
               -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classequiv1;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator0_4;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator0_4 (*
               <- genEl;;
               -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classequiv2;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator0_5;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator0_5 (*
               <- genEl;;
               -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classimpl1;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator0_6;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator0_6 (*
               <- genEl;;
               -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classimpl2;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator0_7;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator0_7 (*
               <- genEl;;
               -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classatex1;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator0_8;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator0_8 (*
               <- genEl;;
               -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classatex2;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator0_9;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator0_9 (*
               <- genEl;;
               -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classcomm1;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator0_10;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator0_10 (*
               <- genEl;;
               -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classcomm2;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator0_11;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator0_11 (*
               <- genEl;;
               -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classarc1;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator0_12;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator0_12 (*
               <- genEl;;
               -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classarc2;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1;; 
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//统计分解后的子结构数量，并进行分类。
		-> .proc_lo_kn_calc_number_of_substr_operator1 (* 
               <- searchSetStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
               -> rrel_set_3: rrel_assign: rrel_scp_var: _esaall1;;
               => nrel_then: .proc_lo_kn_calc_number_of_substr_operator1_1;;
               => nrel_else: .proc_lo_kn_calc_number_of_substr_operator_return;;                                                         
               *);;
//自加部分初始值赋值
		-> .proc_lo_kn_calc_number_of_substr_operator1_1 (*
               <- contAssign;;
               -> rrel_1: rrel_assign: rrel_scp_var: _summa_1;;
               -> rrel_2: rrel_fixed: rrel_scp_const: [0];;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_2;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_2 (*
               <- contAssign;;
               -> rrel_1: rrel_assign: rrel_scp_var: _sumsta_1;;
               -> rrel_2: rrel_fixed: rrel_scp_const: [0];;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_3;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_3 (*
               <- contAssign;;
               -> rrel_1: rrel_assign: rrel_scp_var: _sumcand_1;;
               -> rrel_2: rrel_fixed: rrel_scp_const: [0];;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_4;; 
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//统计分解后标准答案的子结构数量
		-> .proc_lo_kn_calc_number_of_substr_operator1_4 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _esaall1;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator1_5;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator2;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_5 (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_6;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//首先判断该子结构是绑定变量的子结构吗
		-> .proc_lo_kn_calc_number_of_substr_operator1_6 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: nrel_generality;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator1_6a;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator1_7;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_6a (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classgene1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_6a1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_6a1 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_6a2;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_6a2 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_4;; 
                     *);;
//判断该子结构是包含等价关系的子结构吗
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
		-> .proc_lo_kn_calc_number_of_substr_operator1_7 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: nrel_equivalence;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator1_7a;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator1_8;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_7a (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classequiv1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_7a1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_7a1 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_7a2;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_7a2 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_4;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断该子结构是包含蕴含关系的子结构吗
		-> .proc_lo_kn_calc_number_of_substr_operator1_8 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: nrel_implication;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator1_8a;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator1_9;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_8a (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classimpl1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_8a1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_8a1 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_8a2;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_8a2 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_4;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断该子结构是包含原子存在的子结构吗
		-> .proc_lo_kn_calc_number_of_substr_operator1_9 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: atomic_existence;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator1_9a;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator1_10;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_9a (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classatex1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_9a1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_9a1 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_9a2;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_9a2 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_4;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断该子结构是包通用变量弧的子结构吗
		-> .proc_lo_kn_calc_number_of_substr_operator1_10 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_var: rrel_common: rrel_scp_var: _arc;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator1_10a;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator1_11;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_10a (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classcomm1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_10a1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_10a1 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_10a2;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_10a2 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_4;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断该子结构是包含归属变量弧的子结构吗
		-> .proc_lo_kn_calc_number_of_substr_operator1_11 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_var: rrel_access: rrel_scp_var: _arc;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator1_11a;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator1_12;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_11a (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classarc1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_11a1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_11a1 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_11a2;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_11a2 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_4;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//可能有漏掉/错误的情况，但是需要统计子结构数量
		-> .proc_lo_kn_calc_number_of_substr_operator1_12 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_12a;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator1_12a (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumsta_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumsta;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator1_4;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//找出用户答案的所有子结构
		-> .proc_lo_kn_calc_number_of_substr_operator2 (* 
                     <- searchSetStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem2cp;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
                     -> rrel_set_3: rrel_assign: rrel_scp_var: _esaall2;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator2_1;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator_return;;                                                         
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//统计分解后用户答案的子结构数量
		-> .proc_lo_kn_calc_number_of_substr_operator2_1 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _esaall2;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator2_2;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator3;;                                                        
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_2 (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_3;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//首先判断该子结构是绑定变量的子结构吗
		-> .proc_lo_kn_calc_number_of_substr_operator2_3 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: nrel_generality;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator2_3a;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator2_4;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_3a (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classgene2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_3a1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_3a1 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_3a2;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_3a2 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_1;; 
                     *);;
//判断该子结构是包含等价关系的子结构吗
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
		-> .proc_lo_kn_calc_number_of_substr_operator2_4 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: nrel_equivalence;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator2_4a;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator2_5;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_4a (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classequiv2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_4a1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_4a1 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_4a2;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_4a2 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_1;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断该子结构是包含蕴含关系的子结构吗
		-> .proc_lo_kn_calc_number_of_substr_operator2_5 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: nrel_implication;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator2_5a;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator2_6;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_5a (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classimpl2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_5a1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_5a1 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_5a2;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_5a2 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_1;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断该子结构是包含原子存在的子结构吗
		-> .proc_lo_kn_calc_number_of_substr_operator2_6 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: atomic_existence;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator2_6a;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator2_7;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_6a (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classatex2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_6a1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_6a1 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_6a2;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_6a2 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_1;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断该子结构是包通用变量弧的子结构吗
		-> .proc_lo_kn_calc_number_of_substr_operator2_7 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_var: rrel_common: rrel_scp_var: _arc;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator2_7a;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator2_8;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_7a (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classcomm2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_7a1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_7a1 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_7a2;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_7a2 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_1;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断该子结构是包含归属变量弧的子结构吗
		-> .proc_lo_kn_calc_number_of_substr_operator2_8 (* 
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_var: rrel_access: rrel_scp_var: _arc;;
                     => nrel_then: .proc_lo_kn_calc_number_of_substr_operator2_8a;;
                     => nrel_else: .proc_lo_kn_calc_number_of_substr_operator2_9;;                                                         
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_8a (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classarc2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_8a1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_8a1 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_8a2;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_8a2 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_1;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//可能有漏掉/错误的情况，但是需要统计子结构数量
		-> .proc_lo_kn_calc_number_of_substr_operator2_9 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_9a;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator2_9a (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _sumcand_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _sumcand;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator2_1;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//开始调用各个类型结构的子函数开始比较每种类型的匹配数
//首先比较绑定变量的子结构
       -> .proc_lo_kn_calc_number_of_substr_operator3 (* 
			      <- call;;
		           -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_calculate_number_of_gene_substr;;
		           -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
					     -> rrel_1: rrel_fixed: rrel_scp_var: _classgene1;;
					     -> rrel_2: rrel_fixed: rrel_scp_var: _classgene2;;
					     -> rrel_3: rrel_fixed: rrel_scp_var: _elem_nbtups1me;;
					     -> rrel_4: rrel_fixed: rrel_scp_var: _elem_nbtups2me;;
					     -> rrel_5: rrel_fixed: rrel_scp_var: _elem_strus1me;;
					     -> rrel_6: rrel_fixed: rrel_scp_var: _elem_strus2me;;
					     -> rrel_7: rrel_assign: rrel_scp_var: _summam;;
//					     -> rrel_4: rrel_assign: rrel_scp_var: _nextnodes1;;
//					     -> rrel_5: rrel_assign: rrel_scp_var: _nextnodes12;;
				          *);;
		           -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
			      => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_1;;                                            
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator3_1 (* 
		           <- waitReturn;;
			      -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
			      => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_2;;                                                      
                     *);;
//计算匹配的结构数
		-> .proc_lo_kn_calc_number_of_substr_operator3_2 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _summa;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _summa_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _summam;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_3;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator3_3 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _summa_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _summa;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_4;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//比较等价子结构
       -> .proc_lo_kn_calc_number_of_substr_operator3_4 (* 
			      <- call;;
		           -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_calculate_number_of_gene_substr;;
		           -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
					     -> rrel_1: rrel_fixed: rrel_scp_var: _classequiv1;;
					     -> rrel_2: rrel_fixed: rrel_scp_var: _classequiv2;;
					     -> rrel_3: rrel_fixed: rrel_scp_var: _elem_nbtups1me;;
					     -> rrel_4: rrel_fixed: rrel_scp_var: _elem_nbtups2me;;
					     -> rrel_5: rrel_fixed: rrel_scp_var: _elem_strus1me;;
					     -> rrel_6: rrel_fixed: rrel_scp_var: _elem_strus2me;;
					     -> rrel_7: rrel_assign: rrel_scp_var: _summam;;
//					     -> rrel_4: rrel_assign: rrel_scp_var: _nextnodes1;;
//					     -> rrel_5: rrel_assign: rrel_scp_var: _nextnodes12;;
				          *);;
		           -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
			      => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_5;;                                            
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator3_5 (* 
		           <- waitReturn;;
			      -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
			      => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_6;;                                                      
                     *);;
//计算匹配的结构数
		-> .proc_lo_kn_calc_number_of_substr_operator3_6 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _summa;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _summa_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _summam;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_7;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator3_7 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _summa_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _summa;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_8;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//比较蕴含子结构
       -> .proc_lo_kn_calc_number_of_substr_operator3_8 (* 
			      <- call;;
		           -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_calculate_number_of_gene_substr;;
		           -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
					     -> rrel_1: rrel_fixed: rrel_scp_var: _classimpl1;;
					     -> rrel_2: rrel_fixed: rrel_scp_var: _classimpl2;;
					     -> rrel_3: rrel_fixed: rrel_scp_var: _elem_nbtups1me;;
					     -> rrel_4: rrel_fixed: rrel_scp_var: _elem_nbtups2me;;
					     -> rrel_5: rrel_fixed: rrel_scp_var: _elem_strus1me;;
					     -> rrel_6: rrel_fixed: rrel_scp_var: _elem_strus2me;;
					     -> rrel_7: rrel_assign: rrel_scp_var: _summam;;
//					     -> rrel_4: rrel_assign: rrel_scp_var: _nextnodes1;;
//					     -> rrel_5: rrel_assign: rrel_scp_var: _nextnodes12;;
				          *);;
		           -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
			      => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_9;;                                            
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator3_9 (* 
		           <- waitReturn;;
			      -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
			      => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_10;;                                                      
                     *);;
//计算匹配的结构数
		-> .proc_lo_kn_calc_number_of_substr_operator3_10 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _summa;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _summa_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _summam;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_11;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator3_11 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _summa_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _summa;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_12;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//比较通用弧子结构
       -> .proc_lo_kn_calc_number_of_substr_operator3_12 (* 
			      <- call;;
		           -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_calculate_number_of_mult_substr;;
		           -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
					     -> rrel_1: rrel_fixed: rrel_scp_var: _classcomm1;;
					     -> rrel_2: rrel_fixed: rrel_scp_var: _classcomm2;;
					     -> rrel_3: rrel_fixed: rrel_scp_var: _elem_strus1me;;
					     -> rrel_4: rrel_fixed: rrel_scp_var: _elem_strus2me;;
					     -> rrel_5: rrel_assign: rrel_scp_var: _summam;;
				          *);;
		           -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
			      => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_13;;                                            
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator3_13 (* 
		           <- waitReturn;;
			      -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
			      => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_14;;                                                      
                     *);;
//计算匹配的结构数
		-> .proc_lo_kn_calc_number_of_substr_operator3_14 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _summa;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _summa_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _summam;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_15;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator3_15 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _summa_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _summa;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_16;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//比较归属弧子结构
       -> .proc_lo_kn_calc_number_of_substr_operator3_16 (* 
			      <- call;;
		           -> rrel_1: rrel_fixed: rrel_scp_const: proc_lo_kn_calculate_number_of_mult_substr;;
		           -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
					     -> rrel_1: rrel_fixed: rrel_scp_var: _classarc1;;
					     -> rrel_2: rrel_fixed: rrel_scp_var: _classarc2;;
					     -> rrel_3: rrel_fixed: rrel_scp_var: _elem_strus1me;;
					     -> rrel_4: rrel_fixed: rrel_scp_var: _elem_strus2me;;
					     -> rrel_5: rrel_assign: rrel_scp_var: _summam;;
				          *);;
		           -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;
			      => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_17;;                                            
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator3_17 (* 
		           <- waitReturn;;
			      -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;
			      => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_18;;                                                      
                     *);;
//计算匹配的结构数
		-> .proc_lo_kn_calc_number_of_substr_operator3_18 (*
                     <- contAdd;;     
                     -> rrel_1: rrel_assign: rrel_scp_var: _summa;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _summa_1;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _summam;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator3_19;; 
                     *);;
		-> .proc_lo_kn_calc_number_of_substr_operator3_19 (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _summa_1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _summa;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4;; 
                     *);;















       -> .proc_lo_kn_calc_number_of_substr_operator4 (* 
                     <- printNl;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _sumsta;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_1;;                                                        
                     *);;
       -> .proc_lo_kn_calc_number_of_substr_operator4_1 (* 
                     <- printNl;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _sumcand;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_2;;                                                        
                     *);;
       -> .proc_lo_kn_calc_number_of_substr_operator4_2 (* 
                     <- printNl;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _summa;;
                     => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator_return;;                                                        
                     *);;


/*
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//删除生成的节点
		-> .proc_lo_kn_calc_number_of_substr_operator4 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _comsub1;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_1;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_1 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _comsub2;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_2;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_2 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _suball1;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_3;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_3 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _suball2;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_4;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_4 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _subifall1;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_5;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_5 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _subifall2;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_6;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_6 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _subthenall1;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_7;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_7 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _subthenall2;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_8;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_8 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elemstart1;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_9;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_9 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elemend1;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_10;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_10 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elemstart2;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_11;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_11 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elemend2;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_12;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_12 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _corpart;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator4_13;; 
               *);;
		-> .proc_lo_kn_calc_number_of_substr_operator4_13 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _incorpart;;
               => nrel_goto: .proc_lo_kn_calc_number_of_substr_operator_return;; 
               *);;



*/
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
		-> .proc_lo_kn_calc_number_of_substr_operator_return
               (*
               <-return;;
               *);;
	*);;
*);;
