scp_program -> proc_lo_kn_calculate_number_of_gene_substr
(*
	-> rrel_params: ...
	(*
		-> rrel_1: rrel_in: _classgene1;; 
		-> rrel_2: rrel_in: _classgene2;;
		-> rrel_3: rrel_in: _elem_nbtups1cp;; 
		-> rrel_4: rrel_in: _elem_nbtups2cp;;
		-> rrel_5: rrel_in: _elem_strus1cp;; 
		-> rrel_6: rrel_in: _elem_strus2cp;;
          -> rrel_7: rrel_out: _summam;;
          -> rrel_8: rrel_in: _mathstrucp;;
	*);;
	-> rrel_operators: ... 
	(*
       -> rrel_init: .proc_lo_kn_calculate_number_of_gene_substr_operator0 (* 
                     <- printNl;;
                     -> rrel_1: rrel_fixed: rrel_scp_const: [计算绑定变量子结构匹配的函数!];;
                     => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator0_1;;                                                     
                     *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator0_1 (*
               <- contAssign;;
               -> rrel_1: rrel_assign: rrel_scp_var: _summa_1m;;
               -> rrel_2: rrel_fixed: rrel_scp_const: [0];;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator0_2;; 
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator0_2 (*
               <- contAssign;;
               -> rrel_1: rrel_assign: rrel_scp_var: _summam;;
               -> rrel_2: rrel_fixed: rrel_scp_const: [0];;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator1;; 
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1 (*
               <- searchSetStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classgene1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _arc;;
               -> rrel_set_3: rrel_assign: rrel_scp_var: _classgene1cp;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_1;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator_return;;  
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_1 (*
               <- searchSetStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classgene2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _arc;;
               -> rrel_set_3: rrel_assign: rrel_scp_var: _classgene2cp;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator_return;;  
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//开始循环比较
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_2 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classgene1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _elemus1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_3;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator_return;; //包含的结构完了，判断下一个结构
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_3 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator1_4;; 
               *);;
//开始进入每个子结构,找出所有归属弧。
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_4 (*
               <- searchSetStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemus1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_set_3: rrel_assign: rrel_scp_var: _elemsub1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_5;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;//@@@跳到开始
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//寻找元组结构
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_5 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemsub1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_6;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;//@没有元组结构，判断下一个结构
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_6 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator1_7;; 
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_7 (*
               <- searchElStr3;;
               -> rrel_1: rrel_assign: rrel_const: rrel_norole_relation: rrel_scp_var: _els1;;
               -> rrel_2: rrel_fixed: rrel_scp_var: _elem;;
               -> rrel_3: rrel_assign: rrel_const: rrel_not_binary_tuple: rrel_scp_var: _elstup1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_8;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_5;;
               *);;
//寻找链接的编号
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_8 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_nbtups1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elstup1;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_9;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//开判断用户答案
//循环比较
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_9 (*
               <- searchSetStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classgene2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _arc;;
               -> rrel_set_3: rrel_assign: rrel_scp_var: _classgene2cp;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator_return;;  
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//开始用户答案循环
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_10 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classgene2cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _elemus2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_11;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;; //包含的结构完了，判断下一个结构
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_11 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator1_12;; 
               *);;
//开始进入每个子结构,找出所有归属弧。
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_12 (*
               <- searchSetStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemus2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_set_3: rrel_assign: rrel_scp_var: _elemsub2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_13;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//寻找元组结构
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_13 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemsub2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_14;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;//@没有元组结构，判断下一个结构
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_14 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator1_15;; 
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_15 (*
               <- searchElStr3;;
               -> rrel_1: rrel_assign: rrel_const: rrel_norole_relation: rrel_scp_var: _els12;;
               -> rrel_2: rrel_fixed: rrel_scp_var: _elem;;
               -> rrel_3: rrel_assign: rrel_const: rrel_not_binary_tuple: rrel_scp_var: _elstup12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_16;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_13;;
               *);;
//寻找链接的编号
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_16 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_nbtups2cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els22;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_17;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断元组结构编号和关系地址相同吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_17 (*
               <- ifCoin;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _els2;; 
               -> rrel_2: rrel_fixed: rrel_scp_var: _els22;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_18;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator1_18 (*
               <- ifCoin;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _els1;; 
               -> rrel_2: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//下半部分结构判断
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2 (*
               <- searchSetStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _arc;;
               -> rrel_set_3: rrel_assign: rrel_scp_var: _elstup1cp;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_1;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;  
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_1 (*
               <- searchSetStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _arc;;
               -> rrel_set_3: rrel_assign: rrel_scp_var: _elstup12cp;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_2;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;  
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//下半部分结构判断开始循环判断
//首先判断下半部分是结构还是元组，或者是混合的
//首先判断有元组吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_2 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_not_binary_tuple: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_3;;//后续判断有结构吗
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator3;;//没有元组说明全是结构，按照结构处理
               *);;
//判断有结构吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_3 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_struct: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_4;;//说明是混合结构
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator5;;//没有元组说明全是元组，按照元组处理5(留下处理双链接元组处理的接口)_return
               *);;
//&&&&&&&&&&&&&&&&&&&
//判断用户答案是混合结构吗(当前版本只支持一个元组和一个结构的混合知识比较)
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_4 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_not_binary_tuple: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_5;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_5 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_struct: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_6;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//################################################################
//混合结构处理
//先找一个元组结构
	-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_6 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_not_binary_tuple: rrel_scp_var: _els1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_7;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator2_15;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_7 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator2_8;; 
               *);;
//寻找编号
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_8 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_nbtups1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els1;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_9;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
//寻找用户答案中相对应的结构
//按照编号寻找
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_9 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_nbtups2cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//寻找这个结构和_elstup12之间有弧吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_10 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_10a;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_10a (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_10b;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_10b (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator2_11;; 
               *);;
//##############################################
//判断这个元组结构有角色关系吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_11 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els1;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els3;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_13;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator2_12;;
               *);;
//用户答案判断
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_12 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els32;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator2_6;;//2_14
               *);;
//用户答案判断
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_13 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_var: _els3;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_6;;//2_14
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//##########################################################
//开始对结构进行比较
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_15 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_struct: rrel_scp_var: _els1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_16a;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator3_11;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_16a (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator2_16;; 
               *);;
//寻找编号
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_16 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_strus1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els1;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_17;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
//用户答案元组结构查找
//按照编号寻找
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_17 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_strus2cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_18;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//寻找这个结构和_elstup12之间有弧吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_18 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_19;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_19 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_20a;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_20a (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator2_20;; 
               *);;
//##############################################
//判断这个结构有角色关系吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_20 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els1;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els3;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_22;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator2_21;;
               *);;
//用户答案判断
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_21 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els32;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator2_25;;
               *);;
//用户答案判断
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_22 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_var: _els3;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_25;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//下面开始判断当前结构只包含变量元素吗(如果包含判断映射关系，如果不包含则这两个结构相同)
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_25 (*
               <- searchSetStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemus1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_var: rrel_node: rrel_scp_var: _arc;;
               -> rrel_set_3: rrel_assign: rrel_scp_var: _elemsub1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_26;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator2_27;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_26 (*
               <- searchSetStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemus2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_var: rrel_node: rrel_scp_var: _arc;;
               -> rrel_set_3: rrel_assign: rrel_scp_var: _elemsub2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_26a;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//变量元素比较
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_26a (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemsub1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_26b;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator2_26f;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_26b (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator2_26c;;
               *);;
//寻找映射元素
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_26c (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _els1;;  
               -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_const: nrel_relation_of_mapping;; 
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_26d;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//判断这个点在用户答案结构中吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_26d (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemsub2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_26e;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_26e (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator2_26a;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断用户答案结构中还有弧吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_26f (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemsub2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator2_15;;//@@2_27a1
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//首先判断用户答案结构中包含变量吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_27 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemus2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_var: rrel_node: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator2_15;;//@@@@2_27a1
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//开始计算匹配的结构数量
//并且删除用户答案中这个弧
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_27a1 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _classgene2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elemus2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator2_27a2;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_27a2 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator2_27a;; 
               *);;
//开始统计结构数
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_27a (*
               <- contAdd;;
               -> rrel_1: rrel_assign: rrel_scp_var: _summam;;
               -> rrel_2: rrel_fixed: rrel_scp_var: _summa_1m;;
               -> rrel_3: rrel_fixed: rrel_scp_const: [1];;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator2_27b;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_27b (*
               <- varAssign;;
               -> rrel_1: rrel_assign: rrel_scp_var: _summa_1m;;
               -> rrel_2: rrel_fixed: rrel_scp_var: _summam;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator2_27c;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator2_27c (*
               <- genElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _mathstrucp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _elemus2;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//下面开始处理具有2个元组节点或2个结构节点的部分
//2个结构节点部分处理
//&&&&&&&&&&&&&&&&&
//判断用户答案也是双结构吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_not_binary_tuple: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator3_1;;
               *);;
//################################################################
//双结构处理
//先判断当前结构中有角色关系吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3_1 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemus1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3_2s;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator4;;//@(具有角色关系的双结构，留有接口)4
               *);;
//判断该角色关系是绑定的变量吗(可能存在绑定的变量的结构具有双结构)  
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3_2s (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemus1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_const: rrel_bind_variables;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator3_2;;
               *);;
//判断用户答案结构中有角色关系吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3_2 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemus2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3_3;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//处理具有角色关系的双结构
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3_3 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3_4;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator3_11;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3_4 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator3_5;; 
               *);;
//寻找编号
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3_5 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_strus1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els1;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3_6;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
//寻找角色关系
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3_6 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els1;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els3;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3_7;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
//寻找用户答案中相对应的结构
//按照编号寻找
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3_7 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_strus2cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3_8;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//寻找这个结构的角色关系
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3_8 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_var: _els3;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3_9;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3_9 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3_10 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator3_3;; 
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断用户答案元组下半部分还有链接或结构吗?
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3_11 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator2_27a1;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//具有绑定角色关系的双结构处理
//首先判断用户答案中有绑定变量的角色关系吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemus2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_const: rrel_bind_variables;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_1;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_1 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els1;;
               -> rrel_4: rrel_assign: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_const: rrel_bind_variables;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_2;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_2 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_const: rrel_bind_variables;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_3;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_3 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_4;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_4 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_5;; 
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_5 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_6;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_6 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_7;; 
               *);;
//寻找编号
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_7 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_strus1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els1;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_8;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_8 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_strus2cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els22;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_9;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//判断编号相同吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_9 (*
               <- ifCoin;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _els2;; 
               -> rrel_2: rrel_fixed: rrel_scp_var: _els22;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//下面开始判断当前结构只包含变量元素吗(如果包含判断映射关系，如果不包含则这两个结构相同)
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_10 (*
               <- searchSetStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _els1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_var: rrel_node: rrel_scp_var: _arc;;
               -> rrel_set_3: rrel_assign: rrel_scp_var: _elemsub1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_11;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_11 (*
               <- searchSetStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _els12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_var: rrel_node: rrel_scp_var: _arc;;
               -> rrel_set_3: rrel_assign: rrel_scp_var: _elemsub2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_12;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//变量元素比较
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_12 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemsub1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_13;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_17;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_13 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_14;;
               *);;
//寻找映射元素
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_14 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _els1;;  
               -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_const: nrel_relation_of_mapping;; 
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_15;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//判断这个点在用户答案结构中吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_15 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemsub2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_16;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_16 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_12;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断用户答案结构中还有弧吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_17 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemsub2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_18;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//处理剩余的结构(没有角色关系)
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_18 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_19;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator3_11;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_19 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_20;; 
               *);;
//寻找编号
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_20 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_strus1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els1;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_21;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
//寻找用户答案中相对应的结构
//按照编号寻找
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_21 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_strus2cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_22;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_22 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_23;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_23 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_24;; 
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator3m_24 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator3m_18;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//处理没有角色关系的双结构
//判断用户答案结构中有角色关系吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator4 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemus2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator4_1;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//处理没有角色关系的双结构
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator4_1 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator4_2;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator3_11;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator4_2 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator4_3;; 
               *);;
//寻找编号
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator4_3 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_strus1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els1;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator4_4;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
//寻找用户答案中相对应的结构
//按照编号寻找
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator4_4 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_strus2cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator4_5;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//寻找这个结构和_elstup12之间有弧吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator4_5 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator4_6;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator4_6 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator4_7;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator4_7 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator4_1;; 
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//下面开始处理具有2个元组节点的部分
//判断用户答案也是双元组结构吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator5 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_struct: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator5_1;;
               *);;
//################################################################
//双结构处理
//先判断当前结构中有角色关系吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator5_1 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemus1;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator_return;;//@@@(目前只处理没有角色关系的双元组结构，留有接口6)
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator5_2;;
               *);;
//判断用户答案结构中有角色关系吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator5_2 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elemus2;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _arc;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator5_3;;
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//处理没有角色关系的双元组
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator5_3 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els1;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator5_4;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator3_11;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator5_4 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator5_5;; 
               *);;
//寻找编号
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator5_5 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_nbtups1cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els1;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_assign: rrel_const: rrel_role_relation: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator5_6;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_2;;
               *);;
//寻找用户答案中相对应的结构
//按照编号寻找
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator5_6 (*
               <- searchElStr5;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elem_nbtups2cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_assign: rrel_scp_var: _els12;;
               -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_5: rrel_fixed: rrel_scp_var: _els2;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator5_7;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
//寻找这个结构和_elstup12之间有弧吗
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator5_7 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator5_8;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator5_8 (*
               <- searchElStr3;;
               -> rrel_1: rrel_fixed: rrel_scp_var: _elstup12cp;;
               -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
               -> rrel_3: rrel_fixed: rrel_scp_var: _els12;;
               => nrel_then: .proc_lo_kn_calculate_number_of_gene_substr_operator5_9;;
               => nrel_else: .proc_lo_kn_calculate_number_of_gene_substr_operator1_10;;
               *);;
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator5_9 (*
               <- eraseEl;;
               -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
               => nrel_goto: .proc_lo_kn_calculate_number_of_gene_substr_operator5_3;; 
               *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
		-> .proc_lo_kn_calculate_number_of_gene_substr_operator_return
               (*
               <-return;;
               *);;
	*);;
*);;