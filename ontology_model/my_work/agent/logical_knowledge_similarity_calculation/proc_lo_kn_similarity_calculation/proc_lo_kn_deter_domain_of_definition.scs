scp_program -> proc_lo_kn_deter_domain_of_definition
(*
	-> rrel_params: ...
	(*
		-> rrel_1: rrel_in: _elems_1cp;;
          -> rrel_2: rrel_in: _elemdedoarc;;
	*);;
	-> rrel_operators: ... 
	(*
       -> rrel_init: .proc_lo_kn_deter_domain_of_definition_operator0 (* 
                     <- printNl;;
                     -> rrel_1: rrel_fixed: rrel_scp_const: [确定绑定变量和结构之间的定义域!];;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator0_1;;                                                                                                                                                                                     
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator0_1
                     (*
                     <- genEl;;
                     -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _classpoint;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator1;;
                     *);;
//(当前版本只支持三个变量结构的语义图),对于更加复杂的结构或许可以尝试使用单链或多链的方法
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//找逻辑公式中的所有结构
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1
                     (*
                     <- searchSetStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elems_1cp;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_const: rrel_struct: rrel_scp_var: _arc;;
                     -> rrel_set_3: rrel_assign: rrel_scp_var: _elemstru1;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator1_1;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//没有则返回
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//找出所有不仅仅是变量的结构，并且生成和第一个变量结构之间的定义域关系
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1_1
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemstru1;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator1_2;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1_2
                     (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator1_3;;
                     *);;
//查找具有变量弧和通用弧的结构
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1_3
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_assign: rrel_const: rrel_not_binary_tuple: rrel_scp_var: _elemcp;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: rrel_bind_variables;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator1_4;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator1_1;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1_4
                     (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _elemmed;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _elemcp;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator1_5;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1_5
                     (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _elemro;;
                     -> rrel_2: rrel_fixed: rrel_scp_const: rrel_1;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//开始确定辖域
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2
                     (*
                     <- searchSetStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemmed;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_const: rrel_struct: rrel_scp_var: _arc;;
                     -> rrel_set_3: rrel_assign: rrel_scp_var: _elemstrucp;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_1;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator3;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_1
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemstrucp;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_const: rrel_struct: rrel_scp_var: _elemcp1;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_2;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator3;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_2
                     (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_3;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_3
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemmed;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elemcp1;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: rrel_bind_variables;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_1;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator2_4;;
                     *);;
//定义域关系生成
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_4
                     (*
                     <- genElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemcp1;;  
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc1;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_definitional_domain;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_5;;
                     *);;
//将生成的定义域弧记录下来，方便后续删除
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_5
                     (*
                     <- genElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemdedoarc;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _arc1;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_1;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//树型结构扫描
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3
                     (*
                     <- searchSetStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemmed;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_const: rrel_not_binary_tuple: rrel_scp_var: _arc;;
                     -> rrel_set_3: rrel_assign: rrel_scp_var: _elstup;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator3_1;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator3_7;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_1
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elstup;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_const: rrel_not_binary_tuple: rrel_scp_var: _elemmed;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator3_2;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_2
                     (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator3_3;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_3
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elstup;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_const: rrel_not_binary_tuple: rrel_scp_var: _arc;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator3_4;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator2;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_4
                     (*
                     <- genElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _classpoint;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elstup;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_var: _elemro;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator3_5;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_5
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemro;;
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _currelem;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_basic_sequence;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator3_6;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_6
                     (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _elemro;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _currelem;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_7
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _currlast;;
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elemro;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_basic_sequence;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator3_8;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_8
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _classpoint;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elemmedcp;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_var: _currlast;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator3_9;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator1_1;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_9
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemmedcp;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elemmed;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator3_10;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_10
                     (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator3_11;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_11
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemmedcp;;
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _arc;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator3_12;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_12
                     (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _elemmedcp;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator3_13;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator3_13
                     (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _elemro;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _currlast;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
        		  -> .proc_lo_kn_deter_domain_of_definition_operator_return
                     (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _classpoint;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator_return1;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
		-> .proc_lo_kn_deter_domain_of_definition_operator_return1
               (*
               <- return;;
               *);;
	*);;
*);;
