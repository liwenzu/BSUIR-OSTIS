scp_program -> proc_lo_kn_deter_domain_of_definition
(*
	-> rrel_params: ...
	(*
		-> rrel_1: rrel_in: _elems_1cp;;
		-> rrel_2: rrel_in: _elem_nbtups;;
          -> rrel_3: rrel_in: _elem_strus;;
	*);;
	-> rrel_operators: ... 
	(*
       -> rrel_init: .proc_lo_kn_deter_domain_of_definition_operator0 (* 
                     <- printNl;;
                     -> rrel_1: rrel_fixed: rrel_scp_const: [确定绑定变量和结构之间的定义域!];;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator1;;                                                                                                                                                                                     
                     *);;
//(当前版本只支持三个变量结构的语义图),对于更加复杂的结构或许可以尝试使用单链或多链的方法
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//找逻辑公式中的所有结构
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1
                     (*
                     <- searchSetStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elems_1cp;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_const: rrel_struct: rrel_scp_var: _elem;;
                     -> rrel_set_3: rrel_assign: rrel_scp_var: _elemstru1;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator1_1;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//没有则返回
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//找出所有不仅仅是变量的结构，并且生成和第一个变量结构之间的定义域关系
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1_1
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemstru1;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator1_2;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator2;;//@@@@@@下一个程序执行
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1_2
                     (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator1_3;;
                     *);;
//查找具有变量弧和通用弧的结构
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1_3
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_var: rrel_access: rrel_scp_var: _elemcp;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator1_5;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator1_4;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1_4
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_var: rrel_common: rrel_scp_var: _elemcp;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator1_5;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator1_1;;
                     *);;
//寻找第一号结构
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1_5
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem_strus;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elemcp;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: rrel_1;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator1_6;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//说明没有第一个结构return@@@
                     *);;
//开始生成定义域结构和1号结构,
        		  -> .proc_lo_kn_deter_domain_of_definition_operator1_6
                     (*
                     <- genElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;  
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elemcp;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_definitional_domain;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator1_1;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//开始寻找其他变量和定义域结构(当前版本只支持三个变量结构的语义图)
//寻找第2号链接节点
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2
                     (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_fixed: rrel_scp_const: rrel_2;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2a;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2a
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem_nbtups;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_var: _elemmed1;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_1;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//说明定义域关系已经生成完了@@@@@
                     *);;
//判断当前节点有绑定的变量吗
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_1
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elemstru1;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: rrel_bind_variables;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_2;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator2_2a;;//@@@@@找下一个链接节点//return
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//查找第一个除去开始的第一个变量结构。
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_2a
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _currelem;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_basic_sequence;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_2a1;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//@@@@说明角色关系不够用了，正常够用。
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_2a1
                     (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _currelem;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2a;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//找下一个链接节点
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_2
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _currelem;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_basic_sequence;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_3;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//@@@@说明角色关系不够用了，正常够用。
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_3
                     (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _currelem;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_4;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_4
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem_nbtups;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elemcp;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_var: _elemmed1;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_5;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//说明链接节点完了
                     *);;
//判断当前节点有绑定变量的结构吗
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_5
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemcp;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elemstru2;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: rrel_bind_variables;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_10;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator2_6;;//判断该节点有结构吗，如果有生成定义域结构
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//扫描这个点的所有结构
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_6
                     (*
                     <- searchSetStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemcp;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_const: rrel_struct: rrel_scp_var: _arc;;
                     -> rrel_set_3: rrel_assign: rrel_scp_var: _elemstrucp;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_7;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator2_7a;;//@@@@@如果没有则查找下一个节点
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//查找第二个除去开始的第二个变量结构。
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_7a
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _currelem;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_basic_sequence;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_7a1;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//@@@@说明角色关系不够用了，正常够用。
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_7a1
                     (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _currelem;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_4;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//开始进行定义域关系的建立
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_7
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemstrucp;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elemcp1;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_8;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator2_7a;;//@@@@@@@@下一个节点的判断
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_8
                     (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_9;;
                     *);;
//定义域关系生成
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_9
                     (*
                     <- genElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemcp1;;  
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elemstru1;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_definitional_domain;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_7;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//判断两个链接节点有相同父节点吗
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_10
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_assign: rrel_const: rrel_not_binary_tuple: rrel_scp_var: _elemcp1;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elem;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_11;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//对于结构变量正常情况肯定会有上一个节点
                     *);;
//第三个绑定变量结构的上一个链接节点
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_11
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_assign: rrel_const: rrel_not_binary_tuple: rrel_scp_var: _elemcp2;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elemcp;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_12;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//对于结构变量正常情况肯定会有上一个节点
                     *);;
//判断2个节点对应的上一个链接节点地址相同吗
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_12
                     (*
                     <- ifCoin;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemcp1;; 
                     -> rrel_2: rrel_fixed: rrel_scp_var: _elemcp2;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_13;;//说明结构之间有不同的定义域
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator2_20;;//说明结构之间具有相交的定义域
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//先处理具有不同的定义域结构
//查找下一个链接节点
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_13
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _currelem;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_basic_sequence;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_14;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//@@@@说明角色关系不够用了，正常够用。
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_14
                     (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _currelem;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_15;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
    		  -> .proc_lo_kn_deter_domain_of_definition_operator2_15
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem_nbtups;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elemcp;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_var: _elemmed1;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_16;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//说明链接节点完了
                     *);;
//(因为当前版本只处理最多三个变量结构因此不在需要判断：判断当前节点有绑定变量的结构吗)
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//扫描这个点的所有结构
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_16
                     (*
                     <- searchSetStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemcp;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_const: rrel_struct: rrel_scp_var: _arc;;
                     -> rrel_set_3: rrel_assign: rrel_scp_var: _elemstrucp;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_17;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator2_17a;;//@@@@@如果没有则查找下一个节点
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//查找第二个除去开始的第二个变量结构。
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_17a
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _currelem;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_basic_sequence;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_17a1;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//@@@@说明角色关系不够用了，正常够用。
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_17a1
                     (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _currelem;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_15;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//开始进行定义域关系的建立
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_17
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemstrucp;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elemcp1;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_18;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator2_17a;;//@@@@@@@@下一个节点的判断
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_18
                     (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_19;;
                     *);;
//定义域关系生成
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_19
                     (*
                     <- genElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemcp1;;  
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elemstru2;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_definitional_domain;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_17;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//处理具有相交的定义域结构
//查找下一个链接节点
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_20
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _currelem;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_basic_sequence;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_21;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//@@@@说明角色关系不够用了，正常够用。
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_21
                     (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _currelem;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_22;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
      		  -> .proc_lo_kn_deter_domain_of_definition_operator2_22
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem_nbtups;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elemcp;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_var: _elemmed1;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_23;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//说明链接节点完了
                     *);;
//(因为当前版本只处理最多三个变量结构因此不在需要判断：判断当前节点有绑定变量的结构吗)
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//扫描这个点的所有结构
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_23
                     (*
                     <- searchSetStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemcp;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_const: rrel_struct: rrel_scp_var: _arc;;
                     -> rrel_set_3: rrel_assign: rrel_scp_var: _elemstrucp;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_24;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator2_24a;;//@@@@@如果没有则查找下一个节点
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//查找第二个除去开始的第二个变量结构。
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_24a
                     (*
                     <- searchElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _currelem;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_basic_sequence;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_24a1;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator_return;;//@@@@说明角色关系不够用了，正常够用。
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_24a1
                     (*
                     <- varAssign;;
                     -> rrel_1: rrel_assign: rrel_scp_var: _elemmed1;;
                     -> rrel_2: rrel_fixed: rrel_scp_var: _currelem;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_22;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//开始进行定义域关系的建立
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_24
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemstrucp;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elemcp1;;
                     => nrel_then: .proc_lo_kn_deter_domain_of_definition_operator2_25;;
                     => nrel_else: .proc_lo_kn_deter_domain_of_definition_operator2_24a;;//@@@@@@@@下一个节点的判断
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_25
                     (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_26;;
                     *);;
//定义域关系生成
//先和第3个变量结构生成定义域关系
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_26
                     (*
                     <- genElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemcp1;;  
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elemstru2;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_definitional_domain;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_27;;
                     *);;
        		  -> .proc_lo_kn_deter_domain_of_definition_operator2_27
                     (*
                     <- genElStr5;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemcp1;;  
                     -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_fixed: rrel_scp_var: _elemstru1;;
                     -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_5: rrel_fixed: rrel_scp_const: nrel_definitional_domain;;
                     => nrel_goto: .proc_lo_kn_deter_domain_of_definition_operator2_24;;
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
		-> .proc_lo_kn_deter_domain_of_definition_operator_return
               (*
               <- return;;
               *);;
	*);;
*);;
