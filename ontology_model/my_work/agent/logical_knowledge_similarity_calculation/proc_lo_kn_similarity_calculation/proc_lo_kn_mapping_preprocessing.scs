scp_program -> proc_lo_kn_mapping_preprocessing
(*
	-> rrel_params: ...
	(*
		-> rrel_1: rrel_in: _elems_1cp;;
          -> rrel_2: rrel_in: _elems_2cp;;
		-> rrel_3: rrel_in: _elem1cp;;
          -> rrel_4: rrel_in: _elem2cp;;
//          -> rrel_5: rrel_out: _elems_1;;  //答案结构节点
	*);;
	-> rrel_operators: ... 
	(*
       -> rrel_init: .proc_lo_kn_mapping_preprocessing_operator0 (* 
                     <- printNl;;
                     -> rrel_1: rrel_fixed: rrel_scp_const: [潜在同义变量之间映射创建函数!];;
                     => nrel_goto: .proc_lo_kn_mapping_preprocessing_operator_return;;                                                                                            
                     *);;
/*

//生成一些节点用于存储需要用到的变量
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
        		  -> .proc_lo_kn_mapping_preprocessing_operator0_1
                     (*
                     <- genEl;;
                     -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _elemvan1;; //最后需要删除这几个点
                     => nrel_goto: .proc_lo_kn_mapping_preprocessing_operator0_2;; 
                     *);;
        		  -> .proc_lo_kn_mapping_preprocessing_operator0_2
                     (*
                     <- genEl;;
                     -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _elemvan2;; //最后需要删除这几个点
                     => nrel_goto: .proc_lo_kn_mapping_preprocessing_operator1;; 
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//找逻辑公式中的所有结构
        		  -> .proc_lo_kn_mapping_preprocessing_operator1
                     (*
                     <- searchSetStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elems_1cp;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_const: rrel_struct: rrel_scp_var: _elem;;
                     -> rrel_set_3: rrel_assign: rrel_scp_var: _elemstru1;;
                     => nrel_then: .proc_lo_kn_mapping_preprocessing_operator1_1;;
                     => nrel_else: .proc_lo_kn_mapping_preprocessing_operator_return;;//没有则返回
                     *);;
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//循环每个子结构
        		  -> .proc_lo_kn_mapping_preprocessing_operator1_1
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemstru1;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elem;;
                     => nrel_then: .proc_lo_kn_mapping_preprocessing_operator1_2;;
                     => nrel_else: .proc_lo_kn_mapping_preprocessing_operator_return;;//没有则到下一个节点
                     *);;
        		  -> .proc_lo_kn_mapping_preprocessing_operator1_2
                     (*
                     <- eraseEl;;
                     -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
                     => nrel_goto: .proc_lo_kn_mapping_preprocessing_operator1_3;;
                     *);;
//判断当前结构中只有变量吗
//相当于判断当前结构包含变量归属弧和变量通用弧吗
        		  -> .proc_lo_kn_mapping_preprocessing_operator1_3
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_var: rrel_access: rrel_scp_var: _elemcp;;
                     => nrel_then: .proc_lo_kn_mapping_preprocessing_operator1_1;;
                     => nrel_else: .proc_lo_kn_mapping_preprocessing_operator1_4;;
                     *);;
        		  -> .proc_lo_kn_mapping_preprocessing_operator1_4
                     (*
                     <- searchElStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_var: rrel_common: rrel_scp_var: _elemcp;;
                     => nrel_then: .proc_lo_kn_mapping_preprocessing_operator1_1;;
                     => nrel_else: .proc_lo_kn_mapping_preprocessing_operator1_5;;
                     *);;
//将找到的标准答案的变量加入到预先生成的节点
        		  -> .proc_lo_kn_mapping_preprocessing_operator1_5
                     (*
                     <- searchSetStr3;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;  
                     -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                     -> rrel_3: rrel_assign: rrel_scp_var: _elemcp;;
                     -> rrel_set_3: rrel_fixed: rrel_scp_var: _elemvan1;;
                     => nrel_then: .proc_lo_kn_mapping_preprocessing_operator1_6;;
                     => nrel_else: .proc_lo_kn_mapping_preprocessing_operator_return;;//@@@@@@说明没法建立映射关系
                     *);;





        		  -> .proc_lo_kn_mapping_preprocessing_operator1_6
                     (*
                     <- printEl;;
                     -> rrel_1: rrel_fixed: rrel_scp_var: _elemvan1;;
//                     => nrel_goto: .proc_lo_kn_mapping_preprocessing_operator_return;;
                     => nrel_goto: .proc_lo_kn_mapping_preprocessing_operator1_1;;
                     *);;







*/

//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
		-> .proc_lo_kn_mapping_preprocessing_operator_return
               (*
               <- return;;
               *);;
	*);;
*);;
