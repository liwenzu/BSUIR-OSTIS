sc_node_norole_relation->nrel_contour;;

nrel_contour=>nrel_main_idtf:[контур*](*<-lang_ru;;*);;
nrel_contour=>nrel_idtf:[contour*](*<-lang_en;;*);;

nrel_contour => nrel_arity_of_relations: 2	(* <- number ;;*);;
nrel_contour <- binary_relation;;

nrel_contour <- reflexive_relation;;
nrel_contour <- antisymmetric_relation;;
nrel_contour <- antitransitive_relation;;

nrel_contour => nrel_definitional_domain: concept_directed_graph;;
nrel_contour => nrel_first_domain: concept_directed_graph;;
nrel_contour => nrel_second_domain: concept_directed_graph;; 

nrel_contour <- rrel_key_sc_element: 
        ... 
            (*
	<- definition;;
	<= nrel_using_constants: {
			concept_directed_graph;
			nrel_path_in_the_digraph;
			concept_node;
			concept_oredge
			};;
	=> nrel_main_idtf: [Определение: контур] (* <- lang_ru;; *);;
	=> nrel_main_idtf: [Definition: contour] (* <- lang_en;; *);;	
	<= nrel_sc_text_translation: ... 
	(*
		-> rrel_example: [Контур есть замкнутый путь.] (* <- lang_ru;; *);;
		-> rrel_example: [Contour is a closed path.] (* <- lang_en;; *);;
		*);;
		<= nrel_bibliographical_source: emelichev_melnikov_lekcii_po_tg;;
*);;				
				
nrel_contour<- rrel_main_key_sc_element:
		...
		(*
		=> nrel_main_idtf: [Утверждение: условие для того, чтобы путь являлся контуром] (* <- lang_ru;; *);;
		=> nrel_main_idtf: [Statement: he condition for the path being a contour] (* <- lang_en;; *);;
		<- statement;;
		<= nrel_sc_text_translation: ...
			(*
			-> rrel_example: 
				[Если начальная и конечная вершина пути совпадают, то путь является контуром.](*<- lang_ru;;*);;
			-> rrel_example: 
				[If the initial and final nodes a the same, the path is a contour.](*<- lang_en;;*);;
			*);;
		<= nrel_bibliographical_source: R_Distel_Graph_Theory;;
		*);;				
	
nrel_contour <- rrel_key_sc_element: 
	...
	(*
		<- illustration;;
		<= nrel_sc_text_translation:
		...
			(*
			-> rrel_example:
				"file://contents/contour.bmp";;
			*);;
	*);;
