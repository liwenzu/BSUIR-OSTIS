@contour0 = [*
	@pair0 = (A => B);;
	@pair1 = (@pair0 => ..node1);;
	@pair2 = (nrel_sets_difference -> @pair1);;
	@pair3 = (..node0 => C);;
	@pair4 = (nrel_combination -> @pair3);;
	@pair5 = (..node0 -> ..node1);;
	@pair6 = (..node0 -> ..node2);;
	@pair7 = (B => A);;
	@pair8 = (@pair7 => ..node2);;
	@pair9 = (nrel_sets_difference -> @pair8);;
	@pair10 = (set -> C);;
	@pair11 = (set -> A);;
	@pair12 = (set -> B);;
*];;
@contour1 = [*
	@pair13 = (set -> A);;
	@pair14 = (set -> C);;
	@pair15 = (A <=> B);;
	@pair16 = (@pair15 => C);;
	@pair17 = (nrel_symmetric_sets_difference -> @pair16);;
	@pair18 = (set -> B);;
*];;
@contour2 = [*
	@pair19 = (_A _<=> _B);;
	@pair20 = (@pair19 _=> _C);;
	@pair21 = (nrel_symmetric_sets_difference _-> @pair20);;
*];;
@contour3 = [*
	@pair22 = (.._node2 _-> .._node0);;
	@pair23 = (.._node2 _-> .._node1);;
	@pair24 = (.._node2 _=> _C);;
	@pair25 = (nrel_combination _-> @pair24);;
	@pair26 = (_A _=> _B);;
	@pair27 = (@pair26 _=> .._node1);;
	@pair28 = (nrel_sets_difference _-> @pair27);;
	@pair29 = (_B _=> _A);;
	@pair30 = (@pair29 _=> .._node0);;
	@pair31 = (nrel_sets_difference _-> @pair30);;
*];;
@pair32 = (@contour2 -> nrel_symmetric_sets_difference);;
@pair33 = (@contour3 -> nrel_sets_difference);;
@pair34 = (rrel_key_sc_element -> @pair33);;
@pair35 = (rrel_key_sc_element -> @pair32);;
@pair36 = (@contour3 <=> @contour2);;
@pair37 = (equivalent_concept_template -> @pair36);;
@pair38 = (statement -> equivalent_concept_template);;
@pair39 = (Question_fa_equivalence_test => @contour0);;
@pair40 = (nrel_correct_answer -> @pair39);;
@pair41 = (Question_fa_equivalence_test => @contour1);;
@pair42 = (nrel_user_answer -> @pair41);;
@pair43 = (equivalent_concept_template -> nrel_symmetric_sets_difference);;
@pair44 = (rrel_key_sc_element -> @pair43);;
@pair45 = (equivalent_concept_template -> nrel_sets_difference);;
@pair46 = (rrel_key_sc_element -> @pair45);;
@pair47 = (nrel_equivalence -> @pair36);;
nrel_sets_difference <- sc_node_norole_relation;;
..node0 <- sc_node_tuple;;
..node1 <- sc_node;;
set <- sc_node_class;;
C <- sc_node;;
..node2 <- sc_node;;
A <- sc_node;;
B <- sc_node;;
B <- sc_node;;
A <- sc_node;;
nrel_combination <- sc_node_norole_relation;;
set <- sc_node_class;;
A <- sc_node;;
B <- sc_node;;
C <- sc_node;;
nrel_symmetric_sets_difference <- sc_node_norole_relation;;
_C <- sc_node;;
nrel_symmetric_sets_difference <- sc_node_norole_relation;;
_B <- sc_node;;
_A <- sc_node;;
.._node0 <- sc_node;;
_B <- sc_node;;
_B <- sc_node;;
_A <- sc_node;;
.._node1 <- sc_node;;
_A <- sc_node;;
nrel_sets_difference <- sc_node_norole_relation;;
nrel_combination <- sc_node_norole_relation;;
_C <- sc_node;;
.._node2 <- sc_node_tuple;;
rrel_key_sc_element <- sc_node_role_relation;;
nrel_symmetric_sets_difference <- sc_node_norole_relation;;
nrel_sets_difference <- sc_node_norole_relation;;
statement <- sc_node_class;;
equivalent_concept_template <- sc_node;;
rrel_key_sc_element <- sc_node_role_relation;;
nrel_correct_answer <- sc_node_norole_relation;;
nrel_user_answer <- sc_node_norole_relation;;
nrel_equivalence <- sc_node_norole_relation;;
Question_fa_equivalence_test <- sc_node;;
